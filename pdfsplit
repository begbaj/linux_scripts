#!/bin/bash

# Check for correct number of arguments
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 <file> <parts>"
    exit 1
fi

file="$1"
parts="$2"

# Check if input file exists
if [ ! -f "$file" ] || [[ ! "$file" =~ \.pdf$ ]]; then
    echo "Error: Input file does not exist or is not a PDF."
    exit 1
fi

pages=$(strings < "$file" | sed -n 's|.*/Count -\{0,1\}\([0-9]\{1,\}\).*|\1|p' | sort -rn | head -n 1)
step=$(awk "BEGIN {printf \"%d\", $pages/$parts}")

echo "total number of pages: $pages"
echo "each document will contain $step pages"

# Create directory for splitting
mkdir -p "./temp_splitting/"
cd "./temp_splitting/"

# Separate EACH page
pdfseparate -f 1 -l "$pages" "../$file" "${file}_%d.pdf"

first=1
last=$step

# Unite the parts
for (( part=1; part<=$parts; part++ )); do
    united_name="${file}_part-${part}.pdf"
    
    if [ "$part" -eq "$parts" ]; then
        last=$pages
    fi
    
    # Create an array to store individual PDFs
    declare -a pdf_files=()
    
    for (( i=$first; i<=$last; i++ )); do
        pdf_files+=("${file}_${i}.pdf")
    done
    
    # Use pdfunite with the array of PDF files
    pdfunite "${pdf_files[@]}" "../$united_name"
    echo "united from $first to $last in $united_name"
    
    first=$((last+1))
    last=$((last+step))
done

# Clean up
cd "../"
rm -r "./temp_splitting/"
